openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Barstore
  license:
    name: MIT
servers:
  - url: http://barstore.swagger.io/v1
paths:
  /bars:
    get:
      summary: List all bars
      operationId: listBars
      tags:
        - bars
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of bars
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bars'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a bar
      operationId: createBars
      tags:
        - bars
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bars/{barId}:
    get:
      summary: Info for a specific bar
      operationId: showBarById
      tags:
        - bars
      parameters:
        - name: barId
          in: path
          required: true
          description: The id of the bar to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /drinks:
    get:
      summary: List all drinks
      operationId: listDrinks
      tags:
        - drinks
      responses:
        '200':
          description: An array of drinks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Drink'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /calculatePrice:
    post:
      summary: Calculate price with details for given drinks
      operationId: calculatePrice
      tags:
        - price
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                drinks:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Total price with details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceWithDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    # existing schemas
    Drink:
      type: object
      required:
        - name
        - price
        - img
      properties:
        name:
          type: string
        price:
          type: number
          format: float
        img:
          type: string
    PriceDetails:
      type: object
      required:
        - price
        - bundle
      properties:
        price:
          type: number
          format: float
        bundle:
          type: array
          items:
            type: string
    PriceWithDetails:
      type: object
      required:
        - total
        - details
      properties:
        total:
          type: number
          format: float
        details:
          type: array
          items:
            $ref: '#/components/schemas/PriceDetails'
    Bar:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Bars:
      type: array
      items:
        $ref: '#/components/schemas/Bar'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
